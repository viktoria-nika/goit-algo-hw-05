### Опис алгоритмів реалізовано методами:

1. **Алгоритм Боєра-Мура**
   - Алгоритм пошуку підрядка, який використовує інформацію про символи у тексті для прискорення процесу пошуку.

2. **Алгоритм Кнута-Морріса-Пратта**
   - Цей алгоритм використовує попередню обробку шаблону, щоб уникнути порівняння вже перевірених символів.

3. **Алгоритм Рабіна-Карпа**
   - Алгоритм, який використовує хешування підрядків для швидкого порівняння.

### Тексти для аналізу були використані: 

- **Стаття 1**: (https://drive.google.com/file/d/18_R5vEQ3eDuy2VdV3K5Lu-R-B-adxXZh/view)
- **Стаття 2**: (https://drive.google.com/file/d/18BfXyQcmuinEI_8KDSnQm4bLx6yIFS_w/view)

### Вимірювання часу виконання

Виконували програмно на python використовуючи вбудований модуль timeit

### Результати

На основі отриманих даних ми можемо зробити наступні висновки:
- Для **Тексту 1**, алгоритм, що показав найкращі результати, був **Алгоритм Кнута-Морріса-Пратта**.
- Для **Тексту 2**, найшвидшим алгоритмом виявився також **Алгоритм Кнута-Морріса-Пратта**.
- Загалом, якщо порівнювати всі три алгоритми, найшвидшим по обом текстам є **Алгоритм Кнута-Морріса-Пратта**.

### Висновки

Аналіз алгоритмів показав, що: 
- **Алгоритм Боєра-Мура** є ефективним при пошуку існуючих підрядків, оскільки використовує інформацію про символи, що дозволяє скоротити кількість порівнянь.
- **Алгоритм Кнута-Морріса-Пратта** виявився більш ефективнішим для текстів, завдяки своїй структурі попередніх обчислень.
- **Алгоритм Рабіна-Карпа** **Алгоритм Боєра-Мура** виявився менш ефективним для даних текстів, особливо при пошуку вигаданих підрядків через використання хешування.

Таким чином, вибір найшвидшого алгоритму залежить від характеру тексту та запитуваного підрядка.